# Generated by Django 5.2.1 on 2025-06-02 12:21

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LinkedInProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "linkedin_id",
                    models.CharField(
                        help_text="LinkedIn user ID", max_length=100, unique=True
                    ),
                ),
                (
                    "profile_url",
                    models.URLField(
                        blank=True, help_text="LinkedIn profile URL", null=True
                    ),
                ),
                (
                    "profile_data",
                    models.JSONField(
                        default=dict, help_text="Additional LinkedIn profile data"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "LinkedIn Profile",
                "verbose_name_plural": "LinkedIn Profiles",
                "db_table": "linkedin_profiles",
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address used in login attempt", max_length=254
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        help_text="IP address of the login attempt"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, help_text="User agent string"),
                ),
                (
                    "success",
                    models.BooleanField(
                        help_text="Whether the login attempt was successful"
                    ),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, help_text="Reason for login failure", max_length=100
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Login Attempt",
                "verbose_name_plural": "Login Attempts",
                "db_table": "login_attempts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        help_text="Password reset token", max_length=64, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When the reset token expires"),
                ),
                (
                    "is_used",
                    models.BooleanField(
                        default=False, help_text="Whether the token has been used"
                    ),
                ),
            ],
            options={
                "verbose_name": "Password Reset Token",
                "verbose_name_plural": "Password Reset Tokens",
                "db_table": "password_reset_tokens",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RefreshToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        help_text="The refresh token", max_length=255, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When the refresh token expires"),
                ),
                (
                    "is_revoked",
                    models.BooleanField(
                        default=False, help_text="Whether the token has been revoked"
                    ),
                ),
            ],
            options={
                "verbose_name": "Refresh Token",
                "verbose_name_plural": "Refresh Tokens",
                "db_table": "refresh_tokens",
                "ordering": ["-created_at"],
            },
        ),
    ]
